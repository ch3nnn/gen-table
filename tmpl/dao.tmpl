package {{.DaoFileName}}

import (
	"context"

	{{ .QueryImportPath }}

)

{{ $modelStructNameLowerFirst := .ModelStructName | LowerFirst }}

var _ iCustomGen{{ .ModelStructName }}Func = (*custom{{ .ModelStructName }}Dao)(nil)

type (
	// not edit interface name
	iCustomGen{{ .ModelStructName }}Func interface {
		iGen{{ .ModelStructName }}Func

		// custom func ....
		// ...
	}
	// not edit interface name
	custom{{ .ModelStructName }}Dao struct {
		{{ .ModelStructName | LowerFirst }}Dao
	}
)

type I{{.ModelStructName}}Dao interface {
    iWhere{{.ModelStructName}}Func
    WithContext(ctx context.Context) iCustomGen{{.ModelStructName}}Func
}


func New{{ .ModelStructName }}Dao() I{{ .ModelStructName }}Dao {
	return &custom{{ .ModelStructName }}Dao{
		{{ .ModelStructName | LowerFirst }}Dao{
			{{ .ModelStructName | LowerFirst }}Do: query.{{ .ModelStructName }}.WithContext(context.Background()),
		},
	}
}


func (d *custom{{.ModelStructName}}Dao) WithContext(ctx context.Context) iCustomGen{{.ModelStructName}}Func {
	d.{{ $modelStructNameLowerFirst }}Do = d.{{ $modelStructNameLowerFirst }}Do.WithContext(ctx)
	return d
}
